cmake_minimum_required(VERSION {argument_cmake_minimum_version})

project({argument_project_name} VERSION {argument_project_version}
                  DESCRIPTION "{argument_project_description}"
                  LANGUAGES CXX)

# Usefull information
message(STATUS "*** CMakeList source dir : ${CMAKE_SOURCE_DIR} ***")
message(STATUS "*** C++ compiler path: ${CMAKE_CXX_COMPILER} ***")
message(STATUS "*** C compiler path: ${CMAKE_C_COMPILER} ***")

set(CMAKE_CXX_STANDARD 23)

# Global compile options
if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    add_compile_options({argument_global_compile_options_gnu})
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
    add_compile_options({argument_global_compile_options_msvc})
endif()

# Global compile definitions
add_compile_definitions({argument_global_compile_definitions})

# Conan
include(build/conan/conan_toolchain.cmake)
find_package(GTest)
find_package(spdlog)
find_package(plf_colony)
find_package(glfw3)
find_package(stb)
find_package(pybind11)
find_package(nlohmann_json)
find_package(glm)
find_package(shaderc)
find_package(glslang)
find_package(SPIRV-Tools)
find_package(vulkan-memory-allocator)

# Tests
enable_testing()

# Vulkan SDK
find_package(Vulkan REQUIRED)

# Add subdirectories
{argument_subdirectories}
